#include<bits/stdc++.h>

using namespace std;

void printUnion(int a[], int b[], int n, int m) {
    int i = 0;
    int j = 0;
    int k = 0;
    int c[n + m + 2];
    while (i < n && j < m)   // {1, 2, 4, 5, 6};
        // {2, 3, 5, 7};
    {

        if (a[i] < b[j])  //1,2,3,4,5,6,7
            cout << a[i++] << " ";
        else if (a[i] > b[j])// && j<=m)
            cout << b[j++] << " ";
        else {
            cout << a[i++] << " ";

            j++;
        }


    }

}

void printIntersection(int a[], int b[], int n, int m) {
    int i = 0;
    int j = 0;
    int k = 0;
    int c[n + m + 2];
    while (i < n && j < m)   // {1, 2, 4, 5, 6};
        // {2, 3, 5, 7};
    {

        if (a[i] < b[j])  //1,2,3,4,5,6,7
            i++;
        else if (a[i] > b[j])// && j<=m)
            j++;
        else {
            cout << a[i++] << " ";

            j++;
        }


    }

}

int main() {
    int arr1[] = {1, 2, 4, 5, 6};
    int arr2[] = {2, 3, 5, 7};
    int m = sizeof(arr1) / sizeof(arr1[0]);
    int n = sizeof(arr2) / sizeof(arr2[0]);
    printIntersection(arr1, arr2, m, n);
    return 0;
}
